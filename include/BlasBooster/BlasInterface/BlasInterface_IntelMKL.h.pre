#pragma once

#include "BlasInterface.h"
#include "FunctionTypes.h"

namespace BlasBooster {

struct IntelMKL {};

void IntelMKL_set_num_threads(int nbThreads);

{% for function in functions_blas %}
template <>
struct BlasInterface <IntelMKL, {{ function.name }}>
{
    {{ function.return_value }} operator() (
    {%- for argument in function.argument_list -%}
    {{ argument }}* v{{loop.index0}}{{ ", " if not loop.last }}
    {%- endfor %}) const;
};

{% endfor -%}

{% for function in functions_blas_zdot %}
template <>
struct BlasInterface <IntelMKL, {{ function.name }}>
{
    {{ function.return_value }} operator() (
    {%- for argument in function.argument_list -%}
    {{ argument }}* v{{loop.index0}}{{ ", " if not loop.last }}
    {%- endfor %}) const;
};

{% endfor -%}

{% for function in functions_spblas %}
template <>
struct BlasInterface <IntelMKL, {{ function.name }}>
{
    {{ function.return_value }} operator() (
    {%- for argument in function.argument_list -%}
    {{ argument }}* v{{loop.index0}}{{ ", " if not loop.last }}
    {%- endfor %}) const;
};

{% endfor -%}

} // namespace BlasBooster
